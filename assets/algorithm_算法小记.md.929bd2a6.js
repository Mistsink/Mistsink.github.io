import{_ as e,o as t,c as a,a as i}from"./chunks/framework.882288bf.js";const u=JSON.parse('{"title":"算法小记","description":"","frontmatter":{"layout":"doc","title":"算法小记","createTime":"2023/3/26","preview":"各种常见算法的公式推导及损失函数"},"headers":[],"relativePath":"algorithm/算法小记.md","lastUpdated":1679935438000}'),o={name:"algorithm/算法小记.md"},c=i('<h1 id="算法小记" tabindex="-1">算法小记 <a class="header-anchor" href="#算法小记" aria-label="Permalink to &quot;算法小记&quot;">​</a></h1><h2 id="线性回归" tabindex="-1">线性回归 <a class="header-anchor" href="#线性回归" aria-label="Permalink to &quot;线性回归&quot;">​</a></h2><ul><li>模型公式： <img src="https://raw.githubusercontent.com/Mistsink/image-host/main/img/image-20230324145628037.png" alt="image-20230324145628037"></li><li>损失函数：L2范数 <img src="https://raw.githubusercontent.com/Mistsink/image-host/main/img/image-20230324150109654.png" alt="image-20230324150109654"></li></ul><h2 id="softmax-回归" tabindex="-1">Softmax 回归 <a class="header-anchor" href="#softmax-回归" aria-label="Permalink to &quot;Softmax 回归&quot;">​</a></h2><ul><li>模型公式： <img src="https://raw.githubusercontent.com/Mistsink/image-host/main/img/image-20230325235946262.png" alt="image-20230325235946262"></li><li>损失函数：交叉熵损失函数 <img src="https://raw.githubusercontent.com/Mistsink/image-host/main/img/image-20230326001543382.png" alt="image-20230326001543382"></li><li>求导 <img src="https://raw.githubusercontent.com/Mistsink/image-host/main/img/image-20230326002527550.png" alt="image-20230326002527550"></li></ul><blockquote><p>如果把熵H(P)想象为“知道真实概率的人所经历的惊异程度”，那么什么是交叉熵？ <em><strong>交叉熵从<code>P</code>到<code>Q</code>，记为<code>H(P,Q)</code>。 我们可以把交叉熵想象为“主观概率为<code>Q</code>的观察者在看到根据概率<code>P</code>生成的数据时的预期惊异”。 当<code>Q=P</code>时，交叉熵达到最低。 在这种情况下，从<code>Q</code>到<code>P</code>的交叉熵是<code>H(P,P)=H(P)</code>。</strong></em></p></blockquote>',6),s=[c];function m(r,n,l,d,g,h){return t(),a("div",null,s)}const p=e(o,[["render",m]]);export{u as __pageData,p as default};
